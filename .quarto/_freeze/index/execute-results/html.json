{
  "hash": "f4a6706016bb9a078637de164d83c249",
  "result": {
    "markdown": "---\ntitle: \"teste_act\"\nlisting:\n  contents: posts\n  sort: \"date desc\"\n  type: default\n  categories: true\n  sort-ui: false\n  filter-ui: false\npage-layout: full\ntitle-block-banner: true\n---\n\n\n# Coleta\n\nPara buscar os dados do SIDRA, devemos acessar a plataforma, encontrar a tabela dos dados do IPCA que desejamos, selecionar os parâmetros (as informações que desejamos importar) e em seguida copiar a chave API.\n\nCom a chave API em mãos, podemos utilizar a função do pacote {sidrar}, get_sidra(), e salvar o resultado da consulta em um objeto.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#### Importação\n\n# Índice Nacional de Preços ao Consumidor Amplo (IPCA) - Acumulado 12 meses - IBGE\nipca_raw <- sidrar::get_sidra(api = \"/t/1737/n1/all/v/2265/p/all/d/v2265%202\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nAll others arguments are desconsidered when 'api' is informed\n```\n:::\n:::\n\n\n\n# Coleta\n\nAgora já temos uma forma de importar os dados do IPCA direto no R! Entretanto, vamos analisar o que importamos:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndplyr::glimpse(ipca_raw)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 514\nColumns: 11\n$ `Nível Territorial (Código)` <chr> \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"…\n$ `Nível Territorial`          <chr> \"Brasil\", \"Brasil\", \"Brasil\", \"Brasil\", \"…\n$ `Unidade de Medida (Código)` <chr> \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"…\n$ `Unidade de Medida`          <chr> \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"…\n$ Valor                        <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ `Brasil (Código)`            <chr> \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"…\n$ Brasil                       <chr> \"Brasil\", \"Brasil\", \"Brasil\", \"Brasil\", \"…\n$ `Variável (Código)`          <chr> \"2265\", \"2265\", \"2265\", \"2265\", \"2265\", \"…\n$ Variável                     <chr> \"IPCA - Variação acumulada em 12 meses\", …\n$ `Mês (Código)`               <chr> \"197912\", \"198001\", \"198002\", \"198003\", \"…\n$ Mês                          <chr> \"dezembro 1979\", \"janeiro 1980\", \"feverei…\n```\n:::\n:::\n\n\nHá diversas colunas, com dados que não possuem importância para a nossa análise, bem como possuem colunas em que os tipos de dados estão totalmente errados! Devemos criar uma forma do R conseguir ler corretamente. Partimos para o processo de limpeza e tratamento.\n\n# Limpeza e Tratamento\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Limpeza do IPCA\n\n# Data de início das séries\ndata_inicio <- lubridate::as_date(\"2004-01-01\")\n\nipca <- ipca_raw |> \n  dplyr::select(\"data\" = \"Mês (Código)\", \"ipca\" = \"Valor\") |> \n  dplyr::mutate(data = lubridate::ym(data)) |> \n  dplyr::filter(data >= data_inicio)  |> \n  dplyr::as_tibble()\n```\n:::\n\n\n\n# Limpeza e Tratamento\n\nVeja o código acima, parece um pouco complicado, certo? Vamos explicar um pouco o que está acontecendo.\n\nEm primeiro lugar, colocamos o nome do objeto `ipca_raw`, em seguida um símbolo |> e depois uma função. O que aconteceu aqui? Estamos utilizando o operador pipe do R, que permite colocarmos tudo o que está do lado esquerdo (isto é, o resultado) dentro do primeiro argumento da função da próxima linha. \n\nO primeiro argumento da função `select()` é um argumento que especifica qual o objeto com dados deverá ser utilizado, no caso, ipca_raw. O operador ajuda a criarmos uma sequência de códigos limpa e fácil de ler.\n\nSeguindo o processo, iremos utilizar a função `select()`do pacote `dplyr`, que vai permitir escolhermos quais as colunas que queremos selecionar do data frame importado. No caso, selecionamos 2 colunas: Mês (Código) e Valor, veja que selecionamos utilizando aspas e também colocando \"data\" e \"ipca\" como valores iguais as colunas. Utilizamos isso para encurtar o caminho: estamos alterando o nome das colunas selecionadas para data e ipca, ou seja, além de selecionar colunas a função select permite alterar o nome das mesmas.\n\n# Limpeza e Tratamento\nEm seguida, utilizamos pipe novamente, colocando o resultado da linha dentro da função da próxima linha: mutate(). A função mutate() permite alterar as observações das colunas do data frame. Aqui, utilizaremos a função ym do pacote lubridate para alterar os dados da coluna data para o tipo date (está em formato character).\n\nLogo após, vamos aplicar um filtro de dados no data frame com a função filter(). Queremos dados a partir de 2004-01-01, que está salvo no objeto data_inicio. Para isso, dentro da função filter() colocamos que queremos os valores da coluna data >= (maior e igual) que data_inicio (2004-01-01).\n\nPor fim, utilizamos a função as_tibble para alterar a estrutura de dados (a classe) do objeto para tibble, que é uma classe similar ao data frame usual, entretanto com mais informações.\n\n# Exploração dos Dados\n\nVamos começar com a função `summary()`, que permite calcular os cinco números dos valores do IPCA. Vemos que o valor mínimo do IPCA Acumulado em 12 meses foi de 1.88%, enquanto o valor máximo foi de 12.13%. A mediana dos valores durante o período está em 5.69%.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(ipca)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      data                 ipca       \n Min.   :2004-01-01   Min.   : 1.880  \n 1st Qu.:2008-09-01   1st Qu.: 4.310  \n Median :2013-05-01   Median : 5.690  \n Mean   :2013-05-01   Mean   : 5.838  \n 3rd Qu.:2018-01-01   3rd Qu.: 6.760  \n Max.   :2022-09-01   Max.   :12.130  \n```\n:::\n:::\n\n\nPodemos entender o comportamento do indicador ao longo do tempo através de uma gráfico de linha, com a data no eixo x e o IPCA no eixo y. Para construir, utilizamos o pacote {ggplot2}, com as suas funções. Primeiro criamos a camada do gráfico com ggplot(), em seguida, criamos a camada das coordenadas dos dados do gráfico com aes(), depois construído o gráfico de linha com geom_line(), e por fim, adicionamos geom_smooth() para criar uma linha que mensura a tendência do indicador ao longo da série.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Gráfico de linha\nipca |> \n  ggplot2::ggplot() +\n  ggplot2::aes(x = data, y = ipca) +\n  ggplot2::geom_line()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/linha-1.png){width=672}\n:::\n:::\n\n\nCom o Histograma podemos analisar a distribuição dos dados. Vemos que os valores se encontram próximo do valor 5% e 6%, com uma cauda alongada para a direita, com pontos extremos positivos, significando menores frequências de acontecimento\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Gráfico de histograma do IPCA\nipca |> \n  ggplot2::ggplot() +\n  ggplot2::aes(x = ipca) +\n  ggplot2::geom_histogram()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/histograma-1.png){width=672}\n:::\n:::\n\n\nHoje descobrimos o quão fácil é analisar a Taxa de Inflação do Brasil. Para aprofundamentos, é possível analisar outras janelas de variações (mensal, semestral, anual), além de dar um passo adiante e iniciar a etapa de modelagem. Até a próxima!",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}